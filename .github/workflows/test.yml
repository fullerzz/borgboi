# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: pytest

on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build-and-test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    env:
      # Configure a constant location for the uv cache
        UV_CACHE_DIR: /tmp/.uv-cache
        UV_VERSION: 0.6.5
        UV_PYTHON_PREFERENCE: only-system
        UV_PYTHON_DOWNLOADS: never
        FORCE_COLOR: 1

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Load cached venv
      id: cached-uv-dependencies
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4
      with:
        path: /tmp/.uv-cache
        key: uv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/uv.lock') }}
    - name: Install dependencies
      run: |
        sudo apt install borgbackup -y
        pip install uv==$UV_VERSION
        rm .python-version
        echo ${{ matrix.python-version }} > .python-version
        uv venv --python ${{ matrix.python-version }}
        source .venv/bin/activate
        uv sync --frozen
    - name: Test with pytest
      run: |
        mkdir ~/.aws && touch ~/.aws/credentials && echo -e "[default]\naws_access_key_id = test\naws_secret_access_key = test" > ~/.aws/credentials
        source .venv/bin/activate
        just test
    - name: Minimize uv cache
      run: uv cache prune --ci
